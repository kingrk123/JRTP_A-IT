Last session : Encoding, Decoding, Encryption & Decryption
-------------------------------------------------------------------------
-> The process of converting data from readable format to un-readable format is called as Encryption.

-> The process of converting data from unreadable format to readable format is called as Decryption.

-> If we are dealing with sensitive data (pin , pwd , ssn, aadhar ) in applications then we should use Encryption and Decryption techniques.
-------------------------------------------------------------------------

-> Encoding is used to convert data into compatiable characters.

-> To convert encoded data back to original format we will use Decoding.

-------------------------------------------------------------------------
package com.ashokit.util;

import java.util.Base64;

import javax.crypto.Cipher;
import javax.crypto.KeyGenerator;
import javax.crypto.SecretKey;

public class PwdUtils {

	private static KeyGenerator keyGenerator = null;
	static SecretKey secretKey = null;
	static Cipher cipher;

	public static String encrypt(String plainText) {
		byte[] plainTextByte = plainText.getBytes();
		String encryptedText = null;
		try {
			keyGenerator = KeyGenerator.getInstance("AES");
			keyGenerator.init(128); // block size is 128bits
			secretKey = keyGenerator.generateKey();
			
			cipher = Cipher.getInstance("AES");

			cipher.init(Cipher.ENCRYPT_MODE, secretKey);
			byte[] encryptedByte = cipher.doFinal(plainTextByte);
			Base64.Encoder encoder = Base64.getEncoder();
			encryptedText = encoder.encodeToString(encryptedByte);

		} catch (Exception e) {
			e.printStackTrace();
		}
		return encryptedText;
	}

	public static String decrypt(String encryptedText) {
		Base64.Decoder decoder = Base64.getDecoder();
		String decryptedText = null;

		try {
			keyGenerator = KeyGenerator.getInstance("AES");
			keyGenerator.init(128); // block size is 128bits
			secretKey = keyGenerator.generateKey();
			
			cipher = Cipher.getInstance("AES");

			byte[] encryptedTextByte = decoder.decode(encryptedText);
			cipher.init(Cipher.DECRYPT_MODE, secretKey);
			byte[] decryptedByte = cipher.doFinal(encryptedTextByte);
			decryptedText = new String(decryptedByte);

		} catch (Exception e) {
			e.printStackTrace();
		}
		return decryptedText;
	}

}
-------------------------------------------------------------------------
02-Mini Project Coding Completed and we have done very basic testing using Swagger. We have below tasks pending in 02-Mini Project
-------------------------------------------------------------------------
1) Exception Handling
2) Server Side Validation
3) Logging
4) Unit Testing Using (Junit with Mockito)
5) Code Coverage (Minimum 85 %)
6) Code Review
7) Performance Testing
8) Deploy application using Jenkins















